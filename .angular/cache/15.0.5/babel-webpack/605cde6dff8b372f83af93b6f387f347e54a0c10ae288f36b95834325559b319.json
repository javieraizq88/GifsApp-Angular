{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GifsService {\n  constructor(http) {\n    this.http = http;\n    this.gifList = [];\n    this._tagsHistory = [];\n    this.apiKey = environment.apiKey;\n    this.serviceUrl = environment.serviceUrl;\n    this.loadLocalStorage();\n    // console.log('Gifs Service Ready');\n  }\n\n  get tagsHistory() {\n    return [...this._tagsHistory];\n  }\n  organizeHistory(tag) {\n    tag = tag.toLowerCase();\n    if (this._tagsHistory.includes(tag)) {\n      this._tagsHistory = this._tagsHistory.filter(oldTag => oldTag !== tag);\n    }\n    this._tagsHistory.unshift(tag);\n    this._tagsHistory = this.tagsHistory.splice(0, 10); // muestra 10 resultados\n    this.saveLocalStorage();\n  }\n  saveLocalStorage() {\n    localStorage.setItem('history', JSON.stringify(this._tagsHistory));\n  }\n  loadLocalStorage() {\n    if (!localStorage.getItem('history')) return; // verificar si no hay data en el localStorage, termina la funcion\n    this._tagsHistory = JSON.parse(localStorage.getItem('history'));\n    if (this._tagsHistory.length === 0) return;\n    this.searchTag(this._tagsHistory[0]);\n  }\n  searchTag(tag) {\n    if (tag.length === 0) return;\n    this.organizeHistory(tag);\n    const params = new HttpParams().set('api_key', this.apiKey).set('limit', '10').set('q', tag);\n    this.http.get(`${this.serviceUrl}/search`, {\n      params\n    }).subscribe(resp => {\n      this.gifList = resp.data;\n      // console.log({ gifs: this.gifList });\n    });\n  }\n}\n\nGifsService.ɵfac = function GifsService_Factory(t) {\n  return new (t || GifsService)(i0.ɵɵinject(i1.HttpClient));\n};\nGifsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GifsService,\n  factory: GifsService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}